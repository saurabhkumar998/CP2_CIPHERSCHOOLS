/*  

We have given a sorted array of infinite length we have to find the position of an element.
as we cannot define an infinte array practically so we are given an array of some length but we would consider it as infinite array 
i.e we do not have the index value of the last element. 

Link :    https://www.geeksforgeeks.org/find-position-element-sorted-array-infinite-numbers/

*/


#include <iostream>
using namespace std;

int binarySearch(int arr[], int l, int r, int x) 
{ 
	if (r>=l) 
	{ 
		int mid = l + (r - l)/2; 
		if (arr[mid] == x) 
			return mid; 
		if (arr[mid] > x) 
			return binarySearch(arr, l, mid-1, x); 
		return binarySearch(arr, mid+1, r, x); 
	} 
	return -1; 
} 


int findPos(int arr[], int key){
	int start = 0;
	int end = 1;
	int val = arr[0];
	while(key > val){
		start = end;
		end = 2*end;
		val = arr[end];
	}
	
	return binarySearch(arr, start, end, key);
}


int main() {
	int arr[] = {1,2,3,4,5,6,7,8,9,10,11,12,15};
	int k;
	cin>>k;
	int pos = findPos(arr, k);
	cout<<"Position of the element "<<k<<" is : "<< pos;

	return 0;
}
