/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    bool hasCycle(ListNode *head) {
        if(head == NULL){
            return false;
        }
        else{
        ListNode* temp = head;
        ListNode* slow = temp;
        ListNode* fast = temp->next;
        
        while(slow != fast){
            if(fast == NULL or fast->next == NULL){
                return false;
            }
            slow = slow->next;
            fast = fast->next->next;
        }
        return true;
        
        }
        
    }      
};